-- ScriptHub by Solara-style with your scripts integrated

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local mouse = LocalPlayer:GetMouse()

-- UI Setup
local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
ScreenGui.Name = "SolaraScriptHub"

local Frame = Instance.new("Frame", ScreenGui)
Frame.Size = UDim2.new(0, 250, 0, 300)
Frame.Position = UDim2.new(0.5, -125, 0.5, -150)
Frame.BackgroundColor3 = Color3.fromRGB(30,30,30)
Frame.Active = true
Frame.Draggable = false
Frame.AnchorPoint = Vector2.new(0.5,0.5)
Frame.BorderSizePixel = 0
Frame.ClipsDescendants = true
Frame.BackgroundTransparency = 0.15

-- Smooth Dragging
local UserInputService = game:GetService("UserInputService")
local dragging, dragInput, dragStart, startPos

Frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = Frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

Frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

game:GetService("RunService").Heartbeat:Connect(function()
    if dragging and dragInput then
        local delta = dragInput.Position - dragStart
        Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- Helper to create toggles
local function CreateToggle(text, position, callback)
    local label = Instance.new("TextLabel", Frame)
    label.Text = text
    label.Position = position
    label.Size = UDim2.new(0, 160, 0, 30)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.new(1,1,1)
    label.Font = Enum.Font.SourceSansBold
    label.TextSize = 18
    label.TextXAlignment = Enum.TextXAlignment.Left

    local toggle = Instance.new("TextButton", Frame)
    toggle.Size = UDim2.new(0, 60, 0, 30)
    toggle.Position = UDim2.new(0, 180, position.Y.Scale, position.Y.Offset)
    toggle.Text = "Off"
    toggle.BackgroundColor3 = Color3.fromRGB(170, 40, 40)
    toggle.TextColor3 = Color3.new(1,1,1)
    toggle.Font = Enum.Font.SourceSansBold
    toggle.TextSize = 18

    local enabled = false
    toggle.MouseButton1Click:Connect(function()
        enabled = not enabled
        if enabled then
            toggle.Text = "On"
            toggle.BackgroundColor3 = Color3.fromRGB(40, 170, 40)
        else
            toggle.Text = "Off"
            toggle.BackgroundColor3 = Color3.fromRGB(170, 40, 40)
        end
        callback(enabled)
    end)
end

-- Placeholders for running/stopping scripts
local flyConnection, aimConnection, spinConnection, espConnection

-- Your Fly script (as-is, modified for toggle)
local function FlyScript(enable)
    if enable then
        local plr = LocalPlayer
        local mouse = plr:GetMouse()
        local player = plr.Character
        local flying = true
        local deb = true
        local ctrl = {f = false, b = false, l = false, r = false}
        local lastctrl = {f = false, b = false, l = false, r = false}
        local maxspeed = 50
        local speed = 0
        local bg, bv

        local function startFly()
            local hrp = player:FindFirstChild("HumanoidRootPart")
            if not hrp then return end
            bg = Instance.new("BodyGyro", hrp)
            bg.P = 9e4
            bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
            bg.cframe = hrp.CFrame
            bv = Instance.new("BodyVelocity", hrp)
            bv.velocity = Vector3.new(0, 0, 0)
            bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
        end

        local function stopFly()
            if bg then bg:Destroy() bg = nil end
            if bv then bv:Destroy() bv = nil end
        end

        startFly()

        flyConnection = game:GetService("RunService").Stepped:Connect(function()
            if flying then
                local hrp = player:FindFirstChild("HumanoidRootPart")
                if hrp then
                    bg.cframe = workspace.CurrentCamera.CFrame
                    local velocity = Vector3.new()
                    if ctrl.f then velocity = velocity + workspace.CurrentCamera.CFrame.LookVector end
                    if ctrl.b then velocity = velocity - workspace.CurrentCamera.CFrame.LookVector end
                    if ctrl.l then velocity = velocity - workspace.CurrentCamera.CFrame.RightVector end
                    if ctrl.r then velocity = velocity + workspace.CurrentCamera.CFrame.RightVector end
                    velocity = velocity.Unit * speed
                    if velocity.Magnitude ~= velocity.Magnitude then velocity = Vector3.new() end
                    bv.velocity = velocity
                end
            end
        end)

        mouse.KeyDown:Connect(function(k)
            if k == "w" then ctrl.f = true end
            if k == "s" then ctrl.b = true end
            if k == "a" then ctrl.l = true end
            if k == "d" then ctrl.r = true end
        end)

        mouse.KeyUp:Connect(function(k)
            if k == "w" then ctrl.f = false end
            if k == "s" then ctrl.b = false end
            if k == "a" then ctrl.l = false end
            if k == "d" then ctrl.r = false end
        end)

        speed = maxspeed
    else
        if flyConnection then flyConnection:Disconnect() flyConnection = nil end
        if LocalPlayer.Character then
            local hrp = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            if hrp then
                for _, v in pairs(hrp:GetChildren()) do
                    if v:IsA("BodyGyro") or v:IsA("BodyVelocity") then
                        v:Destroy()
                    end
                end
            end
        end
    end
end

-- Your Aimbot (simplified toggle)
local aimRunning = false
local aimConn

local function AimbotScript(enable)
    if enable then
        if aimRunning then return end
        aimRunning = true
        local RunService = game:GetService("RunService")
        local camera = workspace.CurrentCamera
        local Players = game:GetService("Players")

        aimConn = RunService.RenderStepped:Connect(function()
            local closestPlayer = nil
            local shortestDistance = math.huge
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
                    local pos, onScreen = camera:WorldToViewportPoint(player.Character.Head.Position)
                    if onScreen then
                        local mousePos = Vector2.new(LocalPlayer:GetMouse().X, LocalPlayer:GetMouse().Y)
                        local distance = (Vector2.new(pos.X, pos.Y) - mousePos).Magnitude
                        if distance < shortestDistance and distance < 200 then
                            shortestDistance = distance
                            closestPlayer = player
                        end
                    end
                end
            end

            if closestPlayer and closestPlayer.Character then
                local head = closestPlayer.Character:FindFirstChild("Head")
                if head then
                    local targetPos = head.Position
                    local currentCFrame = camera.CFrame
                    local newCFrame = CFrame.new(currentCFrame.Position, targetPos)
                    camera.CFrame = currentCFrame:Lerp(newCFrame, 0.15)
                end
            end
        end)
    else
        if aimConn then aimConn:Disconnect() aimConn = nil end
        aimRunning = false
    end
end

-- Your Spin script toggle (simplified)
local spinRunning = false
local spinConn

local function SpinScript(enable)
    if enable then
        if spinRunning then return end
        spinRunning = true
        local character = LocalPlayer.Character
        if not character then spinRunning = false return end
        local hrp = character:FindFirstChild("HumanoidRootPart")
        if not hrp then spinRunning = false return end

        spinConn = game:GetService("RunService").RenderStepped:Connect(function(dt)
            hrp.CFrame = hrp.CFrame * CFrame.Angles(0, math.rad(10), 0)
        end)
    else
        if spinConn then spinConn:Disconnect() spinConn = nil end
        spinRunning = false
    end
end

-- WalkSpeed changer toggle
local walkSpeedConn
local function WalkSpeedChanger(enable)
    if enable then
        local hum = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if hum then
            hum.WalkSpeed = 50
            walkSpeedConn = hum:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
                if hum.WalkSpeed ~= 50 then hum.WalkSpeed = 50 end
            end)
        end
    else
        if walkSpeedConn then walkSpeedConn:Disconnect() walkSpeedConn = nil end
        local hum = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if hum then hum.WalkSpeed = 16 end
    end
end

-- JumpPower changer toggle
local jumpPowerConn
local function JumpPowerChanger(enable)
    if enable then
        local hum = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if hum then
            hum.JumpPower = 100
            jumpPowerConn = hum:GetPropertyChangedSignal("JumpPower"):Connect(function()
                if hum.JumpPower ~= 100 then hum.JumpPower = 100 end
            end)
        end
    else
        if jumpPowerConn then jumpPowerConn:Disconnect() jumpPowerConn = nil end
        local hum = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if hum then hum.JumpPower = 50 end
    end
end

-- ESP toggle (simple box ESP)
local espHighlights = {}
local function ESP(enable)
    if enable then
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local highlight = Instance.new("Highlight")
                highlight.Adornee = player.Character
                highlight.FillColor = Color3.fromRGB(0, 255, 0)
                highlight.OutlineColor = Color3.fromRGB(0, 255, 0)
                highlight.Parent = game:GetService("CoreGui")
                espHighlights[player] = highlight
            end
        end
        -- Listen for new players
        espConnection = Players.PlayerAdded:Connect(function(player)
            player.CharacterAdded:Connect(function(char)
                wait(1)
                if espHighlights[player] then return end
                local highlight = Instance.new("Highlight")
                highlight.Adornee = char
                highlight.FillColor = Color3.fromRGB(0, 255, 0)
                highlight.OutlineColor = Color3.fromRGB(0, 255, 0)
                highlight.Parent = game:GetService("CoreGui")
                espHighlights[player] = highlight
            end)
        end)
    else
        for _, hl in pairs(espHighlights) do
            if hl then hl:Destroy() end
        end
        espHighlights = {}
        if espConnection then
            espConnection:Disconnect()
            espConnection = nil
        end
    end
end

-- Create toggles
CreateToggle("Fly", UDim2.new(0, 0, 0, 10), FlyScript)
CreateToggle("Aimbot", UDim2.new(0, 0, 0, 50), AimbotScript)
CreateToggle("Spin", UDim2.new(0, 0, 0, 90), SpinScript)
CreateToggle("WalkSpeed", UDim2.new(0, 0, 0, 130), WalkSpeedChanger)
CreateToggle("JumpPower", UDim2.new(0, 0, 0, 170), JumpPowerChanger)
CreateToggle("ESP", UDim2.new(0, 0, 0, 210), ESP)
